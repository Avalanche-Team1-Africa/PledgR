name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [develop]

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '8.15.6'

jobs:
  # Smart Contract CI
  contracts-ci:
    runs-on: ubuntu-latest
    name: Smart Contract CI
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Cache Foundry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.foundry
            cache
            out
          key: foundry-${{ runner.os }}-${{ hashFiles('foundry.toml', 'lib/**') }}

      - name: Install dependencies
        run: forge install

      - name: Check formatting
        run: forge fmt --check

      - name: Run tests
        run: forge test -vvv

      - name: Build contracts
        run: forge build --sizes

  # Frontend CI
  frontend-ci:
    runs-on: ubuntu-latest
    name: Frontend CI
    
    defaults:
      run:
        working-directory: ./app-registerUI

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint code
        run: pnpm lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Build application
        run: pnpm build
        env:
          VITE_CHAIN_ID: 43113
          VITE_RPC_URL: https://api.avax-test.network/ext/bc/C/rpc

  # Subgraph CI
  subgraph-ci:
    runs-on: ubuntu-latest
    name: Subgraph CI
    
    defaults:
      run:
        working-directory: ./app-registerUI/pledg-r

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Graph CLI
        run: npm install -g @graphprotocol/graph-cli

      - name: Install dependencies
        run: npm install

      - name: Generate types
        run: graph codegen

      - name: Build subgraph
        run: graph build
